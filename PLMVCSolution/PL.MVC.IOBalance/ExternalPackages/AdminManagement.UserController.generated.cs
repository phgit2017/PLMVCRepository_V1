// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace PL.MVC.IOBalance.Areas.AdminManagement.Controllers
{
    public partial class UserController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected UserController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult isActiveUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.isActiveUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetUsers()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUsers);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public UserController Actions { get { return IOBALANCEMVC.AdminManagement.User; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "AdminManagement";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "User";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "User";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string SaveUser = "SaveUser";
            public readonly string UpdateUser = "UpdateUser";
            public readonly string isActiveUser = "isActiveUser";
            public readonly string GetUsers = "GetUsers";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string SaveUser = "SaveUser";
            public const string UpdateUser = "UpdateUser";
            public const string isActiveUser = "isActiveUser";
            public const string GetUsers = "GetUsers";
        }


        static readonly ActionParamsClass_SaveUser s_params_SaveUser = new ActionParamsClass_SaveUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveUser SaveUserParams { get { return s_params_SaveUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveUser
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_UpdateUser s_params_UpdateUser = new ActionParamsClass_UpdateUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateUser UpdateUserParams { get { return s_params_UpdateUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateUser
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_isActiveUser s_params_isActiveUser = new ActionParamsClass_isActiveUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_isActiveUser isActiveUserParams { get { return s_params_isActiveUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_isActiveUser
        {
            public readonly string userId = "userId";
            public readonly string branchId = "branchId";
            public readonly string userName = "userName";
            public readonly string userTypeId = "userTypeId";
        }
        static readonly ActionParamsClass_GetUsers s_params_GetUsers = new ActionParamsClass_GetUsers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUsers GetUsersParams { get { return s_params_GetUsers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUsers
        {
            public readonly string request = "request";
            public readonly string searchModel = "searchModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _FrmUser = "_FrmUser";
                public readonly string _ListUser = "_ListUser";
                public readonly string _ListUserKendo = "_ListUserKendo";
                public readonly string _ModalEditUser = "_ModalEditUser";
                public readonly string _ModalSearchUser = "_ModalSearchUser";
                public readonly string Index = "Index";
            }
            public readonly string _FrmUser = "~/Areas/AdminManagement/Views/User/_FrmUser.cshtml";
            public readonly string _ListUser = "~/Areas/AdminManagement/Views/User/_ListUser.cshtml";
            public readonly string _ListUserKendo = "~/Areas/AdminManagement/Views/User/_ListUserKendo.cshtml";
            public readonly string _ModalEditUser = "~/Areas/AdminManagement/Views/User/_ModalEditUser.cshtml";
            public readonly string _ModalSearchUser = "~/Areas/AdminManagement/Views/User/_ModalSearchUser.cshtml";
            public readonly string Index = "~/Areas/AdminManagement/Views/User/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_UserController : PL.MVC.IOBalance.Areas.AdminManagement.Controllers.UserController
    {
        public T4MVC_UserController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SaveUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, PL.Business.Dto.IOBalance.UserDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveUser(PL.Business.Dto.IOBalance.UserDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            SaveUserOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void UpdateUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, PL.Business.Dto.IOBalance.UserDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateUser(PL.Business.Dto.IOBalance.UserDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            UpdateUserOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void isActiveUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int userId, int? branchId, string userName, int userTypeId);

        [NonAction]
        public override System.Web.Mvc.ActionResult isActiveUser(int userId, int? branchId, string userName, int userTypeId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.isActiveUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "branchId", branchId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userName", userName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userTypeId", userTypeId);
            isActiveUserOverride(callInfo, userId, branchId, userName, userTypeId);
            return callInfo;
        }

        [NonAction]
        partial void GetUsersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, PL.MVC.IOBalance.Areas.AdminManagement.Models.UserSearchModel searchModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetUsers(Kendo.Mvc.UI.DataSourceRequest request, PL.MVC.IOBalance.Areas.AdminManagement.Models.UserSearchModel searchModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUsers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchModel", searchModel);
            GetUsersOverride(callInfo, request, searchModel);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
