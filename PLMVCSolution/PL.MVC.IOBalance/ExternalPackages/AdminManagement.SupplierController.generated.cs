// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace PL.MVC.IOBalance.Areas.AdminManagement.Controllers
{
    public partial class SupplierController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SupplierController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveSupplier()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveSupplier);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateSupplier()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSupplier);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult isActiveSupplier()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.isActiveSupplier);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetSuppliers()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSuppliers);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SupplierController Actions { get { return IOBALANCEMVC.AdminManagement.Supplier; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "AdminManagement";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Supplier";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Supplier";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string SaveSupplier = "SaveSupplier";
            public readonly string UpdateSupplier = "UpdateSupplier";
            public readonly string isActiveSupplier = "isActiveSupplier";
            public readonly string GetSuppliers = "GetSuppliers";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string SaveSupplier = "SaveSupplier";
            public const string UpdateSupplier = "UpdateSupplier";
            public const string isActiveSupplier = "isActiveSupplier";
            public const string GetSuppliers = "GetSuppliers";
        }


        static readonly ActionParamsClass_SaveSupplier s_params_SaveSupplier = new ActionParamsClass_SaveSupplier();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveSupplier SaveSupplierParams { get { return s_params_SaveSupplier; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveSupplier
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_UpdateSupplier s_params_UpdateSupplier = new ActionParamsClass_UpdateSupplier();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateSupplier UpdateSupplierParams { get { return s_params_UpdateSupplier; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateSupplier
        {
            public readonly string dto = "dto";
        }
        static readonly ActionParamsClass_isActiveSupplier s_params_isActiveSupplier = new ActionParamsClass_isActiveSupplier();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_isActiveSupplier isActiveSupplierParams { get { return s_params_isActiveSupplier; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_isActiveSupplier
        {
            public readonly string supplierId = "supplierId";
            public readonly string supplierCode = "supplierCode";
            public readonly string supplierName = "supplierName";
        }
        static readonly ActionParamsClass_GetSuppliers s_params_GetSuppliers = new ActionParamsClass_GetSuppliers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSuppliers GetSuppliersParams { get { return s_params_GetSuppliers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSuppliers
        {
            public readonly string request = "request";
            public readonly string searchModel = "searchModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ListSupplier = "_ListSupplier";
                public readonly string _ListSupplierKendo = "_ListSupplierKendo";
                public readonly string _ModalEditSupplier = "_ModalEditSupplier";
                public readonly string _ModalSearchSupplier = "_ModalSearchSupplier";
                public readonly string _NewSupplier = "_NewSupplier";
                public readonly string Index = "Index";
            }
            public readonly string _ListSupplier = "~/Areas/AdminManagement/Views/Supplier/_ListSupplier.cshtml";
            public readonly string _ListSupplierKendo = "~/Areas/AdminManagement/Views/Supplier/_ListSupplierKendo.cshtml";
            public readonly string _ModalEditSupplier = "~/Areas/AdminManagement/Views/Supplier/_ModalEditSupplier.cshtml";
            public readonly string _ModalSearchSupplier = "~/Areas/AdminManagement/Views/Supplier/_ModalSearchSupplier.cshtml";
            public readonly string _NewSupplier = "~/Areas/AdminManagement/Views/Supplier/_NewSupplier.cshtml";
            public readonly string Index = "~/Areas/AdminManagement/Views/Supplier/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SupplierController : PL.MVC.IOBalance.Areas.AdminManagement.Controllers.SupplierController
    {
        public T4MVC_SupplierController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SaveSupplierOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, PL.Business.Dto.IOBalance.SupplierDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveSupplier(PL.Business.Dto.IOBalance.SupplierDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveSupplier);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            SaveSupplierOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void UpdateSupplierOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, PL.Business.Dto.IOBalance.SupplierDto dto);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateSupplier(PL.Business.Dto.IOBalance.SupplierDto dto)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSupplier);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            UpdateSupplierOverride(callInfo, dto);
            return callInfo;
        }

        [NonAction]
        partial void isActiveSupplierOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int supplierId, string supplierCode, string supplierName);

        [NonAction]
        public override System.Web.Mvc.ActionResult isActiveSupplier(int supplierId, string supplierCode, string supplierName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.isActiveSupplier);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "supplierId", supplierId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "supplierCode", supplierCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "supplierName", supplierName);
            isActiveSupplierOverride(callInfo, supplierId, supplierCode, supplierName);
            return callInfo;
        }

        [NonAction]
        partial void GetSuppliersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, PL.MVC.IOBalance.Areas.AdminManagement.Models.SupplierSearchModel searchModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSuppliers(Kendo.Mvc.UI.DataSourceRequest request, PL.MVC.IOBalance.Areas.AdminManagement.Models.SupplierSearchModel searchModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSuppliers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchModel", searchModel);
            GetSuppliersOverride(callInfo, request, searchModel);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
