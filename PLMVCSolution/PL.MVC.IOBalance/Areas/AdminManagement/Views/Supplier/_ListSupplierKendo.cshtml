@using Kendo.Mvc.UI;
@using PL.Business.Common;

@(Html.Kendo().Grid<PL.Business.Dto.IOBalance.SupplierDto>()
                .Name("gvSupplier")
        .Columns(columns =>
        {
            
            columns.Template(@<text></text>).ClientTemplate("<a href='javascript:void(0)' type='button' class='selected' data-button-type='actionbuttons' data-action-type='editbutton' data-supplier-id='#=SupplierID#' data-supplier-code='#=SupplierCode#' data-supplier-name='#=SupplierName#'> Edit Details</a>" + " | " +
                            "<a href='javascript:void(0)' type='button' class='selected' data-button-type='actionbuttons' data-action-type='deletebutton' data-supplier-id='#=SupplierID#' data-supplier-name='#=SupplierName#' data-supplier-code='#=SupplierCode#'> Deactivate/Activate </a>")
                .Title("Actions")
                .Width(300)
                .Locked(true)
                .HeaderHtmlAttributes(new { @class = "bos-grid-text-center" })
                .HtmlAttributes(new { @class = "bos-grid-text-center" });
            columns.Bound(c => c.SupplierCode).Title("Supplier Code").Width(300).Sortable(true).Lockable(true);
            columns.Bound(c => c.SupplierName).Title("SupplierName Name").Width(300).Sortable(true).Lockable(true);
            columns.Bound(c => c.IsActive).Title("Active?").Width(210).Sortable(true).Lockable(true);
        })
        .Scrollable()
        .Sortable(sort => sort.AllowUnsort(false))
        .Pageable()
        .ColumnMenu()
        .DataSource(dataSource => dataSource
            .Ajax()
                        .Read(read => read.Action("GetSuppliers", "Supplier"))
            .PageSize(50)
        )
)