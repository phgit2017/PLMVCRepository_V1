// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace PL.MVC.IOBalanceV2.Areas.OrderManagement.Controllers
{
    public partial class SalesOrderController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SalesOrderController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveSalesOrder()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveSalesOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult QueueSalesOrder()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.QueueSalesOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetCustomerAndProductPrice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCustomerAndProductPrice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GenerateReceipt()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GenerateReceipt);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SalesOrderController Actions { get { return IOBALANCEMVCV2.OrderManagement.SalesOrder; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "OrderManagement";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "SalesOrder";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "SalesOrder";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string SaveSalesOrder = "SaveSalesOrder";
            public readonly string QueueSalesOrder = "QueueSalesOrder";
            public readonly string GetCustomerAndProductPrice = "GetCustomerAndProductPrice";
            public readonly string GetPLNum = "GetPLNum";
            public readonly string GenerateReceipt = "GenerateReceipt";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string SaveSalesOrder = "SaveSalesOrder";
            public const string QueueSalesOrder = "QueueSalesOrder";
            public const string GetCustomerAndProductPrice = "GetCustomerAndProductPrice";
            public const string GetPLNum = "GetPLNum";
            public const string GenerateReceipt = "GenerateReceipt";
        }


        static readonly ActionParamsClass_SaveSalesOrder s_params_SaveSalesOrder = new ActionParamsClass_SaveSalesOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveSalesOrder SaveSalesOrderParams { get { return s_params_SaveSalesOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveSalesOrder
        {
            public readonly string dto = "dto";
            public readonly string SalesNo = "SalesNo";
            public readonly string CustomerId = "CustomerId";
        }
        static readonly ActionParamsClass_QueueSalesOrder s_params_QueueSalesOrder = new ActionParamsClass_QueueSalesOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_QueueSalesOrder QueueSalesOrderParams { get { return s_params_QueueSalesOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_QueueSalesOrder
        {
            public readonly string dto = "dto";
            public readonly string SalesNo = "SalesNo";
            public readonly string CustomerId = "CustomerId";
        }
        static readonly ActionParamsClass_GetCustomerAndProductPrice s_params_GetCustomerAndProductPrice = new ActionParamsClass_GetCustomerAndProductPrice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCustomerAndProductPrice GetCustomerAndProductPriceParams { get { return s_params_GetCustomerAndProductPrice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCustomerAndProductPrice
        {
            public readonly string customerId = "customerId";
            public readonly string productId = "productId";
        }
        static readonly ActionParamsClass_GenerateReceipt s_params_GenerateReceipt = new ActionParamsClass_GenerateReceipt();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GenerateReceipt GenerateReceiptParams { get { return s_params_GenerateReceipt; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GenerateReceipt
        {
            public readonly string salesOrderId = "salesOrderId";
            public readonly string salesNo = "salesNo";
            public readonly string customerId = "customerId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _DetailsSalesOrder = "_DetailsSalesOrder";
                public readonly string _DetailsSalesOrderDetail = "_DetailsSalesOrderDetail";
                public readonly string _EditOrderList = "_EditOrderList";
                public readonly string _SalesOrderList = "_SalesOrderList";
                public readonly string Index = "Index";
            }
            public readonly string _DetailsSalesOrder = "~/Areas/OrderManagement/Views/SalesOrder/_DetailsSalesOrder.cshtml";
            public readonly string _DetailsSalesOrderDetail = "~/Areas/OrderManagement/Views/SalesOrder/_DetailsSalesOrderDetail.cshtml";
            public readonly string _EditOrderList = "~/Areas/OrderManagement/Views/SalesOrder/_EditOrderList.cshtml";
            public readonly string _SalesOrderList = "~/Areas/OrderManagement/Views/SalesOrder/_SalesOrderList.cshtml";
            public readonly string Index = "~/Areas/OrderManagement/Views/SalesOrder/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SalesOrderController : PL.MVC.IOBalanceV2.Areas.OrderManagement.Controllers.SalesOrderController
    {
        public T4MVC_SalesOrderController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SaveSalesOrderOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.List<PL.Business.Dto.IOBalanceV2.SalesOrderListDto> dto, string SalesNo, int CustomerId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveSalesOrder(System.Collections.Generic.List<PL.Business.Dto.IOBalanceV2.SalesOrderListDto> dto, string SalesNo, int CustomerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveSalesOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SalesNo", SalesNo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "CustomerId", CustomerId);
            SaveSalesOrderOverride(callInfo, dto, SalesNo, CustomerId);
            return callInfo;
        }

        [NonAction]
        partial void QueueSalesOrderOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.List<PL.Business.Dto.IOBalanceV2.SalesOrderListDto> dto, string SalesNo, int CustomerId);

        [NonAction]
        public override System.Web.Mvc.ActionResult QueueSalesOrder(System.Collections.Generic.List<PL.Business.Dto.IOBalanceV2.SalesOrderListDto> dto, string SalesNo, int CustomerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.QueueSalesOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dto", dto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SalesNo", SalesNo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "CustomerId", CustomerId);
            QueueSalesOrderOverride(callInfo, dto, SalesNo, CustomerId);
            return callInfo;
        }

        [NonAction]
        partial void GetCustomerAndProductPriceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int customerId, int productId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCustomerAndProductPrice(int customerId, int productId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCustomerAndProductPrice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "customerId", customerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "productId", productId);
            GetCustomerAndProductPriceOverride(callInfo, customerId, productId);
            return callInfo;
        }

        [NonAction]
        partial void GetPLNumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPLNum()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPLNum);
            GetPLNumOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GenerateReceiptOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long salesOrderId, string salesNo, int customerId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GenerateReceipt(long salesOrderId, string salesNo, int customerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GenerateReceipt);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "salesOrderId", salesOrderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "salesNo", salesNo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "customerId", customerId);
            GenerateReceiptOverride(callInfo, salesOrderId, salesNo, customerId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
