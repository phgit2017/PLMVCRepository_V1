// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace PL.MVC.IOBalanceV2.Controllers
{
    public partial class CommonController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CommonController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetProductsPerProductId()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetProductsPerProductId);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CommonController Actions { get { return IOBALANCEMVCV2.Common; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Common";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Common";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string GetIsActive = "GetIsActive";
            public readonly string GetEditProductEditType = "GetEditProductEditType";
            public readonly string GetCategories = "GetCategories";
            public readonly string GetQuantityUnit = "GetQuantityUnit";
            public readonly string GetSupplier = "GetSupplier";
            public readonly string GetCustomers = "GetCustomers";
            public readonly string GetCustomersWithoutAdmin = "GetCustomersWithoutAdmin";
            public readonly string GetProducts = "GetProducts";
            public readonly string GetProductsPerProductId = "GetProductsPerProductId";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string GetIsActive = "GetIsActive";
            public const string GetEditProductEditType = "GetEditProductEditType";
            public const string GetCategories = "GetCategories";
            public const string GetQuantityUnit = "GetQuantityUnit";
            public const string GetSupplier = "GetSupplier";
            public const string GetCustomers = "GetCustomers";
            public const string GetCustomersWithoutAdmin = "GetCustomersWithoutAdmin";
            public const string GetProducts = "GetProducts";
            public const string GetProductsPerProductId = "GetProductsPerProductId";
        }


        static readonly ActionParamsClass_GetProductsPerProductId s_params_GetProductsPerProductId = new ActionParamsClass_GetProductsPerProductId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetProductsPerProductId GetProductsPerProductIdParams { get { return s_params_GetProductsPerProductId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetProductsPerProductId
        {
            public readonly string productId = "productId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CommonController : PL.MVC.IOBalanceV2.Controllers.CommonController
    {
        public T4MVC_CommonController() : base(Dummy.Instance) { }

        [NonAction]
        partial void GetIsActiveOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetIsActive()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetIsActive);
            GetIsActiveOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetEditProductEditTypeOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetEditProductEditType()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetEditProductEditType);
            GetEditProductEditTypeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetCategoriesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCategories()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCategories);
            GetCategoriesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetQuantityUnitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetQuantityUnit()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetQuantityUnit);
            GetQuantityUnitOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetSupplierOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSupplier()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSupplier);
            GetSupplierOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetCustomersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCustomers()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCustomers);
            GetCustomersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetCustomersWithoutAdminOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCustomersWithoutAdmin()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCustomersWithoutAdmin);
            GetCustomersWithoutAdminOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetProductsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetProducts()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetProducts);
            GetProductsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetProductsPerProductIdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int productId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetProductsPerProductId(int productId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetProductsPerProductId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "productId", productId);
            GetProductsPerProductIdOverride(callInfo, productId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
