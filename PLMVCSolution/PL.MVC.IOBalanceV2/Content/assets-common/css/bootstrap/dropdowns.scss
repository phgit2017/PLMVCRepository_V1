//
// Dropdown menus
// --------------------------------------------------


// Dropdown arrow/caret
.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top:   $caret-width-base solid;
  border-right: $caret-width-base solid transparent;
  border-left:  $caret-width-base solid transparent;
}

// The dropdown wrapper (div)
.dropup,
.dropdown {
  position: relative;
  display: inline-block;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
  outline: 0;
}

// The dropdown menu (ul)
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: $zindex-dropdown + 1;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  min-width: 160px;
  padding: 0;
  margin: 1px 0 0; // override default ul
  list-style: none;
  font-size: $font-size-base;
  text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
  background-color: $dropdown-bg;
  border: none;
  border-radius: $border-radius-base;
  background-clip: padding-box;
  @include box-shadow(0 2px 25px 0 rgba(0,0,0,.3));


  // Aligns the dropdown menu to right
  //
  // Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]`
  &.pull-right {
    right: 0;
    left: auto;
  }

  // Dividers (basically an hr) within the dropdown
  .divider {
    @include nav-divider($dropdown-divider-bg);
  }

  // Links within the dropdown menu
  > li > a {
    display: block;
    padding: 18px 15px;
    clear: both;
    font-weight: normal;
    line-height: $line-height-base;
    color: $dropdown-link-color;
    cursor: pointer;
    white-space: nowrap; // prevent links from randomly breaking onto new lines
  }

}

// Hover/Focus state
.dropdown-menu > li > a {
  &:hover,
  &:focus {
    text-decoration: none;
    color: $dropdown-link-hover-color;
    background-color: $dropdown-link-hover-bg;
    border-bottom: none;
    
    *[class^='text-'],*[class*=' text-'] { 
      color: $dropdown-link-active-color !important;
    }
  }
}

// Active state
.dropdown-menu > .active > a {
  &,
  &:hover,
  &:focus {
    color: $dropdown-link-active-color;
    text-decoration: none;
    outline: 0;
    background-color: $dropdown-link-active-bg;
    border-bottom: none;
  }
}


// Remove sharp edges on hover
.dropdown-menu > li:first-child a {
  &,
  &:hover,
  &:focus {
      border-top-left-radius: $border-radius-base;
      border-top-right-radius: $border-radius-base;
  }
}

// Remove sharp edges on hover
.dropdown-menu > li:last-child a {
  &,
  &:hover,
  &:focus {
      border-bottom-left-radius: $border-radius-base;
      border-bottom-right-radius: $border-radius-base;
  }
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray

.dropdown-menu > .disabled > a {
  &,
  &:hover,
  &:focus {
    color: $dropdown-link-disabled-color;
  }

  // Nuke hover/focus effects
  &:hover,
  &:focus {
    text-decoration: none;
    background-color: transparent;
    background-image: none; // Remove CSS gradient
    @include reset-filter;
    cursor: $cursor-disabled;
  }
}

// Initial state for the dropdown
.dropdown-menu {
// FadeIn SlideUp Effect
  visibility: hidden;
  @include opacity(0);
  @include transform(translate3d(0,-6px,0));
  @include transition (all 0.3s $easing);
}

// Open state for the dropdown
.open {
  // Show the menu
  > .dropdown-menu {
    display: block;

    // FadeIn SlideUp Effect
    visibility: visible;
    @include opacity(1);
    @include transform(translate3d(0,0,0));
    @include transition (all 0.3s $easing);
  }

  // Remove the outline when :focus is triggered
  > a {
    outline: 0;
  }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
  left: auto; // Reset the default from `.dropdown-menu`
  right: 0;
}
// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
  left: 0;
  right: auto;
}

// Dropdown section headers
.dropdown-header {
  display: block;
  padding: 3px 20px;
  font-size: $font-size-small;
  line-height: $line-height-base;
  color: $dropdown-header-color;
  white-space: nowrap; // as with > li > a
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: ($zindex-dropdown - 10);
}

// Right aligned dropdowns
.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
//
// Just add .dropup after the standard .dropdown class and you're set, bro.
// TODO: abstract this so that the navbar fixed styles are not placed here?

.dropup,
.navbar-fixed-bottom .dropdown {
  // Reverse the caret
  .caret {
    border-top: 0;
    border-bottom: $caret-width-base solid;
    content: "";
  }
  // Different positioning for bottom up menu
  .dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-bottom: 2px;
  }
}


// Component alignment
//
// Reiterate per navbar.less and the modified component alignment there.

@media (min-width: $grid-float-breakpoint) {
  .navbar-right {
    .dropdown-menu, .dropdown-menu-arrow {
      right: 0; left: auto;
    }
    // Necessary for overrides of the default right aligned menu.
    // Will remove come v4 in all likelihood.
    .dropdown-menu-left {
      left: 0; right: auto;
    }
  }
}

// Custom Dropdown for 24/7 Apps
//
// Menu is aligned on the main header's base and consumes the entire screen on mobile phones

// Common attributes
.dropdown, .dropup {
  .dropdown-menu-arrow {
    float: right !important;
    right: 0;
    left: auto;

    > li {
      .md {
        margin-right: 10px;
      }
      .fa{ /*make sure the element doesn't have .md-lg*/
        margin-right: 16px;
      }
    }

    // Arrow
    &:after, &:before {
      right: 15px;
      border: solid transparent;
      content: " ";
      height: 0;
      width: 0;
      position: absolute;
      pointer-events: none;
    }

    &:after {
      border-color: rgba(136, 183, 213, 0);
      border-width: 10px;
      margin-left: -10px;
    }

    &:before {
      border-color: rgba(231, 231, 231, 0);
      border-width: 10px;
      margin-left: -11px;
    }
  }
}

// For dropdowns
.dropdown {
  .dropdown-menu-arrow {
    margin-top: 11px;

    // Arrow
    &:after, &:before {
      bottom: 100%;
    }

    &:after {
      border-bottom-color: #fff;
    }

    &:before {
      border-bottom-color: darken(#D0D0D0, 10%);
    }
  }
}

// For dropups
.dropup {
  .dropdown-menu-arrow {
    margin-bottom: 11px;

    // Arrow
    &:after, &:before {
      top: 100%;
    }

    &:after {
      border-top-color: #fff;
    }

    &:before {
      border-top-color: darken(#D0D0D0, 10%);
    }
  }
}

// Reposition Caret variant for different btn-group/btn sizes
.btn-group .btn + .dropdown-menu-arrow {
  &:before, &:after {
    right: 15px;
  }
}

.btn-group-xs .dropdown-menu-arrow,
.btn-group .btn-xs + .dropdown-menu-arrow {
  &:before, &:after {
    right: 6px !important;
  }
}

.btn-group-sm .dropdown-menu-arrow,
.btn-group .btn-sm + .dropdown-menu-arrow {
  &:before, &:after {
    right: 6px !important;
  }
}

.btn-group-lg .dropdown-menu-arrow,
.btn-group .btn-lg + .dropdown-menu-arrow {
  &:before, &:after {
    right: 15px;
  }
}

.notif-empty {
  background-color: $gray-lighter;

  a {
    .md-insert-emoticon {
      margin-right: 0;
    }

    > span {
      font-size: 0.8em;
    }
    span:last-child {
      font-size: 1.5em;
    }
  }
}
