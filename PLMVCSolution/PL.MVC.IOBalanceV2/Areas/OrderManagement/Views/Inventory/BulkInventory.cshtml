@using PL.Business.Dto.IOBalanceV2;
@using PL.MVC.IOBalanceV2.Areas.OrderManagement.Models;
@{
    ViewBag.Title = "Batch Upload (Inventory)";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section modals{
    
}

<div class="col-md-10 col-md-offset-1" id="divList">
    <div class="panel panel-default">
        <div class="panel-heading">
            <button id="downloadtemplatebutton" class="btn btn-default btn-sm" data-action-type="downloadtemplatebutton">
                <i class="md md-download"></i>
                Download Excel Template
            </button>
            <a class="btn btn-sm btn-link" href='@Url.Action(IOBALANCEMVCV2.OrderManagement.Inventory.Index())'>Go to Inventory</a>
            <div class="panel-widget-controls">
            </div>
        </div>
        <div class="panel-body">
            <div class="well-lg">
                @Html.Partial(IOBALANCEMVCV2.OrderManagement.Inventory.Views._BatchUpload)

                <div id="divResultContainer" style="display:none"></div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script type="text/javascript">
        window.batchInventoryOptions = {
            templateUrl: '@IOBALANCEV2LINKS.Content.excel.templates.BatchInventoryTemplate_xlsx',
            exportUrl : '@Url.Action(IOBALANCEMVCV2.OrderManagement.Inventory.ExportBatchUploaded())'
        };
    </script>

    <script type="text/javascript" src="@IOBALANCEV2LINKS.Scripts.iobalancev2.ordermanagement_batchinventory_js"></script>
    <script type="text/javascript" src="@IOBALANCEV2LINKS.Scripts.infrastructure.jquery_deserialize_js"></script>
}