@using Kendo.Mvc.UI;
@using PL.Business.Common;

@(Html.Kendo().Grid<PL.Business.Dto.IOBalanceV2.ProductDto>()
        .Name("gvProducts")
        .Columns(columns =>
        {
            columns.Template(@<text></text>).ClientTemplate("<div class='btn-group btn-group-xs'><a href='javascript:void(0)' type='button' class='selected btn btn-default' id='edititem' data-button-type='actionbuttons' data-action-type='editbutton' " +
                            " data-product-id='#=ProductId#' data-category-id='#=CategoryId#' data-quantity-unit-id='#=QuantityUnitId#' data-product-code='#=ProductCode#' data-product-name='#=ProductName#' data-product-description='#=ProductDescription#' data-product-size='#=ProductSize#' data-product-supplierid='#=SupplierId#' data-product-currentnum='#=CurrentNum#' data-product-drnum='#=DRNum#' data-product-cartonnum='#=CartonNum#' data-product-quantity='#=Quantity#'> Edit Details</a>" + " " +
                            " <a href='javascript:void(0)' type='button' class='selected btn btn-default' id='editqtyitem' data-button-type='actionbuttons' data-action-type='editqtyitem' " +
                            " data-product-id='#=ProductId#' data-category-id='#=CategoryId#' data-quantity-unit-id='#=QuantityUnitId#' data-product-code='#=ProductCode#' data-product-name='#=ProductName#' data-product-description='#=ProductDescription#' data-product-size='#=ProductSize#' data-product-supplierid='#=SupplierId#' data-product-currentnum='#=CurrentNum#' data-product-drnum='#=DRNum#' data-product-cartonnum='#=CartonNum#' data-product-quantity='#=Quantity#'>Edit Quantity</a></div>")
                .Title("Actions")
                .Width(220)
                .HeaderHtmlAttributes(new { @class = "bos-grid-text-center" })
                .HtmlAttributes(new { @class = "bos-grid-text-center" });
            columns.Bound(c => c.CategoryName).Title("Category Name").Width(250).Sortable(true).Lockable(true);
            columns.Bound(c => c.UnitName).Title("Unit Name").Width(140).Sortable(false).Lockable(true);
            columns.Bound(c => c.ProductCode).Title("Product Code").Width(180).Sortable(true).Lockable(true);
            columns.Bound(c => c.ProductName).Title("Product Name").Width(300).Sortable(true).Lockable(true);
            columns.Bound(c => c.ProductDescription).Title("Product Description").Width(300).Sortable(true).Lockable(true);
            columns.Bound(c => c.ProductSize).Title("Product Size").Width(140).Sortable(true).Lockable(true);
            columns.Bound(c => c.Quantity).Title("Quantity").Width(160).Sortable(true).Lockable(true);
            columns.Bound(c => c.CurrentNum).Title("Current Number").Width(160).Sortable(true).Lockable(true);
            columns.Bound(c => c.DRNum).Title("DR Number").Width(160).Sortable(true).Lockable(true);
            columns.Bound(c => c.CartonNum).Title("Carton Number").Width(160).Sortable(true).Lockable(true);
        })
        .Scrollable()
        .Sortable(sort => sort.AllowUnsort(false))
        .Pageable()
        .ColumnMenu()
        .DataSource(dataSource => dataSource
            .Ajax()
                .Read(read => read.Action("GetDetails", "Inventory"))
            .PageSize(50)
                .Sort(s => s.Add("ProductId").Descending())
        )
)